import matplotlib.pyplot as plt  # matplotlib.pyplotをpltとしてインポート
import numpy as np  # numpyをnpとしてインポート
import seaborn as sns  # seabornをsnsとしてインポート
import japanize_matplotlib  # matplotlibで日本語を使用するためのライブラリ

plt.rcParams["font.size"] = 16  # グラフのフォントサイズを設定

# データの定義
t = np.arange(0, 101, 1)  # 時間軸（0から100まで）
x_t = [
    0.2, 0.64, 0.9216, 0.28901376, 0.821939226, 0.585420539, 0.970813326, 0.113339247, 0.401973849, 0.961563495,
    0.14783656, 0.503923646, 0.99993842, 0.000246305, 0.000984976, 0.003936025, 0.015682131, 0.061744808, 0.231729548, 0.712123859,
    0.820013873, 0.590364483, 0.967337041, 0.126384362, 0.441645421, 0.986378972, 0.053741981, 0.203415122, 0.648149641, 0.912206736,
    0.320342428, 0.870892628, 0.449754634, 0.989901613, 0.039985639, 0.153547151, 0.519881693, 0.998418873, 0.006314507, 0.025098538,
    0.097874404, 0.35318002, 0.913775574, 0.315159096, 0.863335361, 0.471949661, 0.996852714, 0.012549522, 0.049568127, 0.188444511,
    0.611732709, 0.950063207, 0.189772438, 0.61503544, 0.94706739, 0.200522995, 0.641254094, 0.920189124, 0.293764402, 0.829867512,
    0.564749697, 0.983229907, 0.065955428, 0.246421239, 0.742791249, 0.764209638, 0.720773069, 0.805037009, 0.627809693, 0.934658729,
    0.244287156, 0.738443765, 0.772578283, 0.702804318, 0.835481634, 0.549808293, 0.990076536, 0.039299956, 0.151021877, 0.512857079,
    0.999338782, 0.002643123, 0.010544547, 0.041733437, 0.15996703, 0.537510318, 0.994371904, 0.022385682, 0.087538253, 0.319501229,
    0.869680775, 0.4533445, 0.991293057, 0.034524528, 0.13333034, 0.462213442, 0.994288704, 0.022714708, 0.088795, 0.323641792, 0.87559113
]

# サブプロットを含むグラフの作成
fig, axs = plt.subplots(1, 2, figsize=(10, 4))  # サブプロットのレイアウト設定

# 時系列プロットの作成（seabornを使用）
sns.lineplot(x=t, y=x_t, marker='o', ax=axs[0], color="g")  # 時系列グラフの描画
axs[0].set_xlabel("Time [$t$]")  # x軸のラベル
axs[0].set_ylabel("$x(t)$")  # y軸のラベル
axs[0].grid(True)  # グリッドを表示

# ラグプロット（1ステップタイムラグの散布図）の作成（seabornを使用）
sns.scatterplot(x=x_t[:-1], y=x_t[1:], ax=axs[1], color="g")  # ラグプロットの描画
axs[1].set_xlabel("$x(t)$")  # x軸のラベル
axs[1].set_ylabel("$x(t+1)$")  # y軸のラベル
axs[1].grid(True)  # グリッドを表示

# グラフの表示
plt.tight_layout()  # レイアウトの調整
plt.savefig("1_1_5_logistic_map.png", dpi=300)  # グラフをファイルに保存
plt.show()  # グラフの表示
